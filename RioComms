#include "LedControl.h"
#include <SPI.h>

LedControl lc  = LedControl(12,10,11,4);

int input;
String timeSent = "1";
long startTime = -1;
long r;


void setup() {
  // put your setup code here, to run once:
  Serial.begin(57600);
  
  for(int board = 0; board<4; board++){
    lc.shutdown(board,false);
    lc.setIntensity(board,7);
    lc.clearDisplay(board);
  }
}

void loop() {
  // put your main code here, to run repeatedly:
  static boolean sendTest = false;
  static boolean startingMode;
  static int anim = 0; //rio command for animation: 1 is mean, 2 is surprised, 3 is anime

  //
  //check for commands from RIO
  if(Serial.available() > 0){
    input = Serial.read();

    if(input == 65){//A
      //toggle on sendTest
      sendTest = true;
    }
    else if(input == 66){//B
      //toggle off sendTest
      sendTest = false;
    }
    else if(input == 67){//C
      anim = 1;
    }
    else if(input = 68){//D
      anim = 2
    }
    else if(input = 69){//E
      anim = 3;
    }
  }

  //
  //draw eyes on boards
  if(timeStart == -1)
  {
    startingMode = true;
    timeStart = millis();
  }
  
  if(mode == 0)
  {
    if(startingMode)
    {
      startingMode = false;
      bigEye1();
    }
    
    if(millis()-startTime>=5000)
    {
      mode = 1;
      startTime = -1;
    }
  }
  else if(mode == 1)
  {
    if(millis()-startTime>=800;
    {
      bigEye1();
      startTime = -1;
      mode = 0;
    }
    else if(millis()-startTime>=600;
      bigEye2();
    else if(millis()-startTime>=400;
      bigEye3();
    else if(millis()-startTime>=200;
      bigEye2();
    else
      bigEye1();
  }

  //
  //send responses to RIO
  if(sendTest){
    timeSent = millis();
    Serial.print("A:");
    Serial.print(timeSent);
  }
}

void bigAnime1() { 
  //top right
  lc.setRow(0,0,B11110000);
  lc.setRow(0,1,B11110000);

  for(int row=2;row<8;row++) {
  lc.setRow(0,row,B00001100); 
  }
  
  //top left
  lc.setRow(1,0,B00000000);
  lc.setRow(1,1,B00000000);
  lc.setRow(1,2,B00000011);
  lc.setRow(1,3,B00000011);
  lc.setRow(1,4,B00001100);
  lc.setRow(1,5,B00001100);
  lc.setRow(1,6,B00110000);
  lc.setRow(1,7,B00110000);
  
  
  //bottom right
  lc.setRow(2,0,B00001100);
  lc.setRow(2,1,B00001100);
  lc.setRow(2,2,B11001100);
  lc.setRow(2,3,B11001100);
  lc.setRow(2,4,B00001100);
  lc.setRow(2,5,B00001100);
  lc.setRow(2,6,B11110000);
  lc.setRow(2,7,B11110000);

  //bottom left
  for (int row=0;row<4;row++) {
    lc.setRow(3,row,B00110011);
  }
  
  lc.setRow(3,4,B00110000);
  lc.setRow(3,5,B00110000);
  lc.setRow(3,6,B00001111);
  lc.setRow(3,7,B00001111);
}

void bigMean1() { 
  //top right
  lc.setRow(0,0,B11110000);
  lc.setRow(0,1,B11110000);

  for(int row=2;row<8;row++) {
    lc.setRow(0,row,B00001100); 
  }
  
  //top left
  lc.setRow(1,0,B00000000);
  lc.setRow(1,1,B00000000);
  lc.setRow(1,2,B00000011);
  lc.setRow(1,3,B00000011);
  lc.setRow(1,4,B00001100);
  lc.setRow(1,5,B00001100);
  lc.setRow(1,6,B00110000);
  lc.setRow(1,7,B00110000);
  
  //bottom right
  lc.setRow(2,0,B00001100);
  lc.setRow(2,1,B00001100);
  lc.setRow(2,2,B11001100);
  lc.setRow(2,3,B11001100);
  lc.setRow(2,4,B00001100);
  lc.setRow(2,5,B00001100);
  lc.setRow(2,6,B11110000);
  lc.setRow(2,7,B11110000);

  //bottom left
  for (int row=0;row<4;row++) {
    lc.setRow(3,row,B00110011);
  }
  
  lc.setRow(3,4,B00110000);
  lc.setRow(3,5,B00110000);
  lc.setRow(3,6,B00001111);
  lc.setRow(3,7,B00001111);
}

void bigMean2() { 
  //top right
  lc.setRow(0,0,B00000000);
  lc.setRow(0,1,B00000000);
  lc.setRow(0,2,B11111100);
  lc.setRow(0,3,B11111100);
  for (int row=4;row<8;row++) {
    lc.setRow(0,row,B00001100);
  }
  
  //top left
  for (int row=4;row<8;row++) {
    lc.setRow(1,row,B00000000);
  }
  lc.setRow(1,4,B00001100);
  lc.setRow(1,5,B00001100);
  lc.setRow(1,6,B00110000);
  lc.setRow(1,7,B00110000);
  
  //bottom right
  for(int row=0;row<4;row++) {
    lc.setRow(2,row,B11001100);
  }
 
  lc.setRow(2,4,B00001100);
  lc.setRow(2,5,B00001100);
  lc.setRow(2,6,B11110000);
  lc.setRow(2,7,B11110000);

  //bottom left
  lc.setRow(3,0,B00110000);
  lc.setRow(3,1,B00110000);
  lc.setRow(3,2,B00110011);
  lc.setRow(3,3,B00110011);
  lc.setRow(3,4,B00110000);
  lc.setRow(3,5,B00110000);
  lc.setRow(3,6,B00001111);
  lc.setRow(3,7,B00001111);
}

void bigMean3() {
  //top right
  for(int row=0;row<4;row++) {
    lc.setRow(0,row,B00000000);
  }
  lc.setRow(0,4,B11111100);
  lc.setRow(0,4,B11111100);
  lc.setRow(0,4,B11001100);
  lc.setRow(0,4,B11001100);
  
  //top left
  for(int row=0;row<4;row++) {
    lc.setRow(1,row,B00000000);
  }
  lc.setRow(1,4,B00000011);
  lc.setRow(1,5,B00000011);
  lc.setRow(1,6,B00001100);
  lc.setRow(1,7,B00001100);
  
  //bottom right
  for(int row=0;row<4;row++) {
    lc.setRow(2,row,B11001100);
  }
 
  lc.setRow(2,4,B11110000);
  lc.setRow(2,5,B11110000);
  lc.setRow(2,6,B00000000);
  lc.setRow(2,7,B00000000);

  //bottom left
  for(int row=0;row<4;row++) {
    lc.setRow(3,row,B00110000);
  }
  
  lc.setRow(3,4,B00111111);
  lc.setRow(3,5,B00111111);
  lc.setRow(3,6,B00000000);
  lc.setRow(3,7,B00000000);
  
}

void bigMean4() {
  //top right
  for (int row=0;row<4;row++) {
    lc.setRow(0,row,B00000000);
  }
  lc.setRow(0,4,B11111100);
  lc.setRow(0,4,B11111100);
  lc.setRow(0,4,B11001100);
  lc.setRow(0,4,B11001100);
  
  //top left
  for (int row=0;row<6;row++) {
    lc.setRow(1,row,B00000000);
  }
  lc.setRow(1,6,B00000011);
  lc.setRow(1,7,B00000011);  
  
  //bottom right
  for (int row=0;row<4;row++) {
    lc.setRow(2,row,B11001100);
  }
  lc.setRow(2,4,B11110000);
  lc.setRow(2,5,B11110000);
  lc.setRow(2,6,B00000000);
  lc.setRow(2,7,B00000000);

  //bottom left
  lc.setRow(3,0,B00001100);
  lc.setRow(3,1,B00001100);
  lc.setRow(3,2,B00110000);
  lc.setRow(3,3,B00110000);
  lc.setRow(3,4,B00111111);
  lc.setRow(3,5,B00111111);
  lc.setRow(3,6,B00000000);
  lc.setRow(3,7,B00000000);
}

void bigSurprised1() {
  //top right
  lc.setRow(0,0,B11111100);
  lc.setRow(0,1,B11111100);

  for(int row=2;row<8;row++) {
    lc.setRow(0,row,B00000011);
  }
  
  //top left
  lc.setRow(1,0,B00111111);
  lc.setRow(1,1,B00111111);

  for(int row=2;row<8;row++) {
    lc.setRow(1,row,B11000000);
  }

  //bottom right
  lc.setRow(2,0,B00000011);
  lc.setRow(2,1,B00000011);
  lc.setRow(2,2,B11000011);
  lc.setRow(2,3,B11000011);
  lc.setRow(2,4,B00000011);
  lc.setRow(2,5,B00000011);
  lc.setRow(2,6,B11111100);
  lc.setRow(2,7,B11111100);
  
  //bottom left
  lc.setRow(3,0,B11000011);
  lc.setRow(3,1,B11000011);
  lc.setRow(3,2,B11000011);
  lc.setRow(3,3,B11000011);
  lc.setRow(3,4,B11000000);
  lc.setRow(3,5,B11000000);
  lc.setRow(3,6,B00111111);
  lc.setRow(3,7,B00111111);
}

void bigSurprised2() {
  //top right
  lc.setRow(0,0,B11111100);
  lc.setRow(0,1,B11111100);

  for(int row=2;row<6;row++) {
    lc.setRow(0,row,B00000011);
  }
  
  lc.setRow(0,6,B00000011);
  lc.setRow(0,7,B00000011);
  
  //top left
  lc.setRow(1,0,B00111111);
  lc.setRow(1,1,B00111111);

  for(int row=2;row<6;row++) {
    lc.setRow(1,row,B11000000);
  }

  lc.setRow(1,6,B11001111);
  lc.setRow(1,7,B11001111);

  //bottom right 
  lc.setRow(2,0,B00000011);
  lc.setRow(2,1,B00000011);
  lc.setRow(2,2,B11110011);
  lc.setRow(2,3,B11110011);
  lc.setRow(2,4,B11110011);
  lc.setRow(2,5,B11110011);
  lc.setRow(2,6,B11111100);
  lc.setRow(2,7,B11111100);
  
  //bottom left
  lc.setRow(3,0,B11001111);
  lc.setRow(3,1,B11001111);
  lc.setRow(3,2,B11001111);
  lc.setRow(3,3,B11001111);
  lc.setRow(3,4,B11001111);
  lc.setRow(3,5,B11001111);
  lc.setRow(3,6,B00111111);
  lc.setRow(3,7,B00111111);
}

void bigSurprised3() {
  //top right
  lc.setRow(0,0,B11110000);
  lc.setRow(0,1,B11110000);

  for(int row=2;row<8;row++) {
    lc.setRow(0,row,B00001100);
  }
  
  //top left
  lc.setRow(1,0,B00001111);
  lc.setRow(1,1,B00001111);

  for(int row=2;row<6;row++) {
    lc.setRow(1,row,B00110000);
  }

  lc.setRow(1,6,B00111111);
  lc.setRow(1,7,B00111111);

  //bottom right 
  lc.setRow(2,0,B00001100);
  lc.setRow(2,1,B00001100);
  lc.setRow(2,2,B11111100);
  lc.setRow(2,3,B11111100);
  lc.setRow(2,4,B11111100);
  lc.setRow(2,5,B11111100);
  lc.setRow(2,6,B11110000);
  lc.setRow(2,7,B11110000);
  
  //bottom left
  lc.setRow(3,0,B00111111);
  lc.setRow(3,1,B00111111);
  lc.setRow(3,2,B00111111);
  lc.setRow(3,3,B00111111);
  lc.setRow(3,4,B00111111);
  lc.setRow(3,5,B00111111);
  lc.setRow(3,6,B00001111);
  lc.setRow(3,7,B00001111);
}

void bigEye1() {
  
    lc.setRow(1,0,B00001111);
    lc.setRow(1,1,B00001111);

    for(int row = 2;row<8;row++){
      lc.setRow(1,row,B00110000);
    }
  
    lc.setRow(0,0,B11110000);
    lc.setRow(0,1,B11110000);

    for(int row = 2;row<8;row++){
      lc.setRow(0,row,B00001100);
    }
  
  
    lc.setRow(3,0,B00110011);
    lc.setRow(3,1,B00110011);
    lc.setRow(3,2,B00110011);
    lc.setRow(3,3,B00110011);
    lc.setRow(3,4,B00110000);
    lc.setRow(3,5,B00110000);
    lc.setRow(3,6,B00001111);
    lc.setRow(3,7,B00001111);
  
    lc.setRow(2,0,B00001100);
    lc.setRow(2,1,B00001100);
    lc.setRow(2,2,B11001100);
    lc.setRow(2,3,B11001100);
    lc.setRow(2,4,B00001100);
    lc.setRow(2,5,B00001100);
    lc.setRow(2,6,B11110000);
    lc.setRow(2,7,B11110000);
  
  }

void bigEye2() {

  //top right
  for (int row = 0;row<4;row++){
    lc.setRow(0,row,B00000000);
  }
  
  lc.setRow(0,4,B11110000);
  lc.setRow(0,5,B11110000);
  lc.setRow(0,6,B00001100);
  lc.setRow(0,7,B00001100);

  //top left
  for (int row = 0;row<4;row++){
    lc.setRow(1,row,B00000000);
  }

  lc.setRow(1,4,B00001111);
  lc.setRow(1,5,B00001111);
  lc.setRow(1,6,B00110000);
  lc.setRow(1,7,B00110000);

  //bottom right
  lc.setRow(2,0,B00001100);
  lc.setRow(2,1,B00001100);
  lc.setRow(2,2,B11001100);
  lc.setRow(2,3,B11001100);
  lc.setRow(2,4,B11110000);
  lc.setRow(2,5,B11110000);
  lc.setRow(2,6,B00000000);
  lc.setRow(2,7,B00000000);

  //bottom left
   lc.setRow(3,0,B00110011);
   lc.setRow(3,1,B00110011);
   lc.setRow(3,2,B00110011);
   lc.setRow(3,3,B00110011);
   lc.setRow(3,4,B00001111);
   lc.setRow(3,5,B00001111);
   lc.setRow(3,6,B00000000);
   lc.setRow(3,7,B00000000);
}

void bigEye3() {

//top right and left
  for(int row = 0;row<=7;row++){
    for(int panel = 0; panel<2;panel++) {
      lc.setRow(panel,row,B00000000);
    }
  }

  //bottom right
  lc.setRow(2,0,B00000000);
  lc.setRow(2,1,B00000000);

  for(int row = 2;row<6;row++) {
    lc.setRow(2,row,B11110000);
  }

  lc.setRow(2,6,B00000000);
  lc.setRow(2,7,B00000000);

  //bottom left
  lc.setRow(3,0,B00000000);
  lc.setRow(3,1,B00000000);

  for(int row = 2;row<6;row++) {
    lc.setRow(3,row,B00111111);
  }

  lc.setRow(3,6,B00000000);
  lc.setRow(3,7,B00000000);
}
